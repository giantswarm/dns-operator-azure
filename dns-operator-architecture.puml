@startuml
!include <C4/C4_Container>

'LAYOUT_WITH_LEGEND()
'LAYOUT_LANDSCAPE()
'LAYOUT_LEFT_RIGHT()

'skinparam linetype polyline

'Container(azure, "Azure")
'System_Ext(systemExt, "system ext")

'TODO: 
'* describe arrows better
'* describe containers
'* play a bit with legend
'* play a bit with colours and tags

AddRelTag("reconcilation", $textColor=DarkBlue, $lineColor=DarkBlue, $lineStyle=DottedLine(), $legendText="reconciliation")

AddElementTag("default", $fontColor=$ELEMENT_FONT_COLOR, $bgColor=DarkGreen, $legendText="all Clusters")
AddRelTag("default", $textColor=DarkGreen, $lineColor=DarkGreen, $legendText="all Clusters")

AddElementTag("private", $fontColor=$ELEMENT_FONT_COLOR, $bgColor=DarkRed, $legendText="private Clusters only")
AddRelTag("private", $textColor=DarkRed, $lineColor=DarkRed, $lineStyle=DashedLine(), $legendText="private Clusters only")

System(DNSOperatorAzure, "dns-operator-azure")

Boundary(managementClusterResourceGroup, "resourceGroup/management Cluster"){
    Boundary(managementClusterK8s, "CAPI management cluster"){

        Container(azureClusterCR, "azureCluster", "CR on k8s", the ""azureCluster"" CR on Kubernetes, $tags="k8sCR")
        Container(azureMachineCR, "azureMachine", "CR on k8s", the ""azureMachine"" CR on Kubernetes, $tags="k8sCR")
    }

    Boundary(privateDNSzone, "private DNS zone"){
        Container(privateEndpointIP, "privateEndpoint IP", "A Record", "k8s API IP of the private link", $tags="private")
    }
}

Boundary(workloadClusterResourceGroup, "resourceGroup/workload Cluster"){

    Boundary(workloadClusterPublicDNSzone, "public DNS zone"){
        Container(apiserverARecord, "k8s API" , "A Record", "point to the k8s API LB", $tags="default")
        Container(bastionARecord, "bastion host" , "A Record", "point to the k8s API LB", $tags="default")
    }

}

Boundary(baseDomainResourceGroup, "resourceGroup/baseDomain"){

    Boundary(baseDomain, "baseDomain"){
        Container(workloadClusterNSRecord, "NS record", "", "e.g. azuretest.gigantic.io", $tags="default")
    }
}

' normal reconciliation
Rel_Left(DNSOperatorAzure, azureClusterCR, read, , $tags="reconcilation")
Rel_Left(DNSOperatorAzure, azureMachineCR, read, , $tags="reconcilation")

Rel_Down(DNSOperatorAzure,workloadClusterPublicDNSzone,CRUD, , $tags="default")
Rel_Down(DNSOperatorAzure,apiserverARecord, CRUD, , $tags="default")
Rel_Down(DNSOperatorAzure, bastionARecord, CRUD, , $tags="default")
Rel_Down(DNSOperatorAzure, workloadClusterNSRecord, CRUD, , $tags="default")

' private clusters only
Rel_Up(DNSOperatorAzure,privateDNSzone, CRUD, , $tags="private")
Rel_Up(DNSOperatorAzure,privateEndpointIP, CRUD, , $tags="private")

SHOW_FLOATING_LEGEND()

@enduml
